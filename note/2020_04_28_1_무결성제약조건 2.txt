(2020_04_27_5_무결성제약조건 필기 이어서)

- 무결성제약조건
	- 테이블에 유효하지 않은 데이터가 입력되는 것을 방지하기 위해 정의한다.
	* 테이블에 새로운 행이 추가될 때, 행의 값이 변경될 때, 행이 삭제될 때마다 정의된 제약조건을 위배하지는 않는지 검사한다.
	(제약조건을 위배하는 작업은 수행되지 않는다.)
	
	- 무결성 제약조건의 종류
		-------------------------------------------------------------------------------------------
		제약조건		설명
		-------------------------------------------------------------------------------------------
		NOT NULL		지정된 컬럼은 NULL값을 포함할 수 없다.
						컬럼명 데이터타입 NOT NULL
					예) 사용자명, 비밀번호, 배송지 주소 등
		-------------------------------------------------------------------------------------------
		UNIQUE			지정된 컬럼은 테이블의 모든 행에서 고유한 값을 가져야 한다.
					NULL값은 중복해서 저장될 수 있다.
					(NULL은 미입력상태로, 서로 비교될 수 없으므로)
					UNIQUE 조건은 둘 이상의 컬럼에 있는 값들을 조합하여 정의할 수도 있다.
					예) 주민번호, 이메일, 사용자아이디 등
					예2) 수강신청 : 학기/학번/수강과목이 모두 중복되는 행은 생성할 수 없다.
							학기/학번/수강과목 중 하나라도 다른 경우에는 생성 가능
		-------------------------------------------------------------------------------------------
		PRIMARY KEY		지정된 컬럼은 테이블의 각 행을 고유하게 식별할 수 있어야 한다.
					지정된 컬럼은 고유한 값을 가져야 하며, NULL값을 포함할 수 없다.
					보통 일련번호 생성기(SEQUENCE)로부터 획득한 값을 사용한다.
						컬럼명 데이터타입 PRIMARY KEY
					테이블에서 행을 대표하는 컬럼에 PRIMARY KEY 제약조건을 정의한다.
					예) 학번, 사원번호, 부서번호 등
		-------------------------------------------------------------------------------------------
		FOREIGN KEY 		지정된 컬럼은 참조된 테이블의 컬럼과 외래 키 관계를 설정한다.
					참조된 테이블의 컬럼에 존재하는 값만 유효한 값으로 인정된다.
						컬럼명 데이터타입 REFERENCES 참조할테이블명 (참조할컬럼명)
					예) 
					직원테이블의 부서아이디는 부서테이블의 부서아이디를 참조한다. 
					직원테이블의 직종아이디는 직종테이블의 직종아이디를 참조한다.
					부서테이블의 관리자아이디는 직원테이블의 직원아이디를 참조한다.
					직원테이블의 매니저아이디는 직원테이블의 직원아이디를 참조한다.
		-------------------------------------------------------------------------------------------
		CHECK 			지정된 컬럼은 제시된 조건식이 true로 판정되는 값만 입력된다.
					예)
					성적은 0.0 ~ 4.5 사이의 값만 입력되어야 한다.
					합격여부는 '합격', '불합격' 둘 중 하나만 입력되어야 한다.
					성별은 '남', '여' 둘 중 하나만 입력되어야 한다.
					가격은 0보다 큰 값만 입력되어야 한다.
					생일은 오늘보다 이전 날짜의 값만 입력되어야 한다.
		-------------------------------------------------------------------------------------------
	* 하나의 컬럼에 둘 이상의 제약조건을 걸 수 있다.
	예) NOT NULL + FOREIGN KEY 등

	- 제약조건 정의하기
		- 컬럼제약조건 레벨
			CREATE TABLE 테이블명 (
				컬럼명 데이터타입 [DEFAULT 값] [컬럼제약조건],
				컬럼명, 데이터타입 [DEFAULT 값] [컬럼제약조건],
				...
			)
			* 하나의 컬럼에 대해 제약조건을 정의한다.
			* NOT NULL 제약조건은 컬럼제약조건으로만 지정할 수 있다.
			* 컬럼제약조건
				컬럼명 데이터타입 [CONSTRAINT 제약조건별칭] 제약조건
				* 제약조건별칭은 생략할 수 있다.
				* 제약조건별칭 설정 이유 : 만약 제약조건을 위배해서 에러가 났을 때 제약조건별칭을 확인할 수 있게 됨
		- 테이블제약조건 레벨
			CREATE TABLE 테이블명 (
				컬럼명 데이터타입 [DEFAULT 값],
				컬럼명, 데이터타입 [DEFAULT 값],
				...
				[테이블제약조건]
			)
			* 하나 이상의 컬럼에 대해서 제약조건을 지정할 수 있다.
			* NOT NULL 제약조건을 제외한 모든 제약조건을 지정할 수 있다.
			* 테이블제약조건
				[CONSTRAINT 제약조건별칭] 제약조건 (컬럼명, ...)
		- 제약조건 정의하기
			* NOT NULL 제약조건
			  CREATE TABLE users(
				username VARCHAR2(100) 			     NOT NULL, -- 컬럼제약조건
				userpwd VARCHAR2(100) CONSTRAINT user_pwd_nn NOT NULL, -- 제약조건별칭 설정
				...
			  )
			
			* UNIQUE 제약조건
			  CREATE TABLE users(
			  	userid VARCHAR2(100)				 UNIQUE,
				useremail VARCHAR2(256) CONSTRAINT user_email_uk UNIQUE,
				...
			  )
			  CREATE TABLE users(
			  	userid VARCHAR2(100),
				useremail VARCHAR2(256),
				...
				UNIQUE(userid)
				CONSTRAINT user_email_uk UNIQUE (useremail)
			  )
			
			* PRIMARY KEY 제약조건
			  CREATE TABLE users (
				user_no number(10) 			 PRIMARY KEY,
				user_no number(10) CONSTRAINT user_no_pk PRIMARY KEY, -- PRIMARY KEY는 테이블당 하나뿐임
				...
			  )
			  CREATE TABLE users (
				user_no number(10),
				PRIMARY KEY (user_no),
				CONSTRAINT user_no_pk PRIMARY KEY (user_no)
			
			* FOREIGN KEY 제약조건
			  CREATE TABLE orders(
				user_no number(10) REFERENCES users (user_no)
				book_no number(10) CONSTRAINT order_book_no_fk REFERENCES books (book_no)
			  )
			  CREATE TABLE orders(
				user_no2 number(10),
				book_no2 number(10),
				FOREIGN KEY (user_no2) REFERENCES users (user_no)
				CONSTRAINT orders_bookno_fk_ FOREIGN KEY (book_no2)
					REFERENCES users (user_no)
			  )
			