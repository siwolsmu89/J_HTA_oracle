- 절차형 SQL
	* PL/SQL(Procedural Language extension to SQL)
		- SQL도 다른 프로그래밍 언어처럼 절차지향적 프로그램을 작성할 수 있다.
		- 특징
			* DBMS 내부에서 실행된다.
			* BEGIN/END의 블록구조로 프로그램을 모듈화할 수 있다.
			* 조건문, 반복문 등을 사용해서 연속적인 SQL 작업을 수행할 수 있다.
	* 프로시저(Procedure)
		- 특정 작업을 수행하는, 이름을 가진 PL/SQL 블록이다.
		- 매개변수를 받을 수 있고, 재사용할 수 있는 PL/SQL 블록이다.
		- 보통 연속적인 작업 혹은 실행단계가 복잡한 트랜잭션(SQL작업)을 수행하기 위해서 생성한다.
	* 함수(Function)
		- 프로시저와 동일하게 절차형 SQL을 활용하여 일련의 SQL 작업을 처리하고,
		  그 처리 결과를 단일값으로 반환할 수 있는 절차형 SQL이다.
	* 트리거(Trigger)
		- 특정 테이블에 데이터의 추가, 수정, 삭제 등의 데이터변경 이벤트가 발생하면
		  DBMS에서 자동으로 실행되도록 구현된 프로그램을 말한다.

- 프로시저
	* 문법
	  CREATE OR REPLACE PROCEDURE 프로시저명
	  ( 변수명 IN  데이터타입,
	    변수명 OUT 데이터타입, ... )
	  IS
		-- 변수 선언
		변수명 데이터타입;
		변수명 데이터타입 := 값;
	  BEGIN 
		SQL 문장, PL/SQL 제어문장
		...
	  END;
	* 실행하기
	  EXECUTE 프로시저명(값, 값);

- 함수
	* 문법
	CREATE OR REPLACE FUNCTION 함수명
	(변수명 IN 데이터타입,
	 변수명 IN 데이터타입, ...)

	-- 함수가 반환하는 값의 타입을 지정한다.
	RETURN 데이터타입
	
	IS
		변수명 데이터타입;
	BEGIN 
		PL/SQL 블록
		-- 리턴문이 반드시 존재해야 한다.
		RETURN 변수 또는 값;
	END;

- 트리거
	* 문법
	CREATE OR REPLACE TRIGGER 트리거명
	BEFORE | AFTER 					-- BEFORE나 AFTER중 하나를 사용한다.
	INSERT | UPDATE | DELETE ON 테이블명		-- INSERT나 UPDATE, DELETE 중 하나를 사용한다.
	FOR EACH ROW
	BEGIN
		PL/SQL 구문
	END;