- 트랜잭션 처리하기
	- 트랜잭션은 데이터의 일관성을 보장한다.
	- 트랜잭션은 여러번의 DML 작업(INSERT, UPDATE, DELETE)을 하나의 논리적인 작업 단위로 묶어준다.
	- 트랜잭션은 서로 관련있는 DML 작업의 결과가 전부 데이터베이스에 반영되게 하거나,
	전부 데이터베이스에 반영되지 않고 취소되게 하기 위해서 사용되는 기능이다.
	- DML 작업의 결과는 트랜잭션 단위로 DB 반영 및 취소가 일어난다.
	- 트랜잭션의 시작
		* 첫번째 DML문이 실행될 때 시작된다.
		* COMMIT 또는 ROLLBACK 명령어가 실행되는 경우 시작된다.
		* 시스템에 장애가 발생한 경우 시작된다.
		- 트랜잭션의 시작 및 종료 예
			INSERT문 실행			--- 첫번째 트랜잭션 시작, 새로운 작업 그룹(Tx1)이 시작, 
							INSERT문의 실행결과가 Tx1에 포함
			INSERT문 실행			--- 실행결과가 Tx1에 포함
			SELECT문 실행			--- 해당사항없음
			UPDATE문 실행			--- 실행결과가 Tx1에 포함
			* Tx1 -> INSERT, INSERT, UPDATE
			COMMIT 실행			--- Tx1에 포함된 작업결과가 영구적으로 DB반영, 첫번째 트랜잭션 종료, 
							두 번째 트랜잭션 시작, 새로운 작업 그룹(Tx2) 시작

			UPDATE문 실행			-- 실행결과가 Tx2에 포함
			INSERT문 실행			-- 실행결과가 Tx2에 포함
			INSERT문 실행			-- 실행결과가 Tx2에 포함
			CREATE문 실행			-- 해당사항 없음
			DROP문   실행			-- 해당사항 없음
			DELETE문 실행			-- 실행결과가 Tx2에 포함
			SELECT문 실행			-- 해당사항 없음
			* Tx2 -> UPDATE, INSERT, INSERT, DELETE 작업결과가 포함되어 있음
			ROLLBACK 실행 			--- Tx2에 포함된 작업결과의 DB반영이 모두 취소, 두 번째 트랜잭션 종료, 
							세 번째 트랜잭션 시작, 새로운 작업그룹(Tx3) 시작

	- 트랜잭션 제어 명령어
		- COMMIT
			* 작업그룹에 포함된 모든 데이터 변경 내용을 영구적으로 데이터베이스에 저장한다.
			* 현재 트랜잭션을 종료한다.
			* 새로운 트랜잭션을 시작한다.
		- SAVEPOINT name
			* 현재 트랜잭션 내에 저장지점을 표시한다.
		- ROLLBACK
			* 작업그룹에 포함된 모든 데이터 변경 내용을 버린다.
			* 현재 트랜잭션을 종료한다.
			* 새로운 트랜잭션을 시작한다.
		- ROLLBACK TO SAVEPOINT name
			* 현재 트랜잭션에 지정된 저장지점으로 롤백한다.
			* 작업그룹에서 해당 저장지점 이후에 포함된 모든 데이터 변경내용 및 저장지점을 버린다.
	- 트랜잭션 제어 명령어와 관련된 데이터 상태
		- COMMIT/ROLLBACK 실행 이전의 데이터 상태
			* 데이터를 이전 상태로 되돌릴 수 있다.
			* 현재 사용자는 SELECT문을 사용하여 DML 작업 결과를 확인할 수 있다.
			* 다른 사용자는 DML 작업 결과를 확인할 수 없다.
			* 현재 사용자가 작업 중인 관련 행들을 잠금처리하기 때문에 다른 사용자는 그 행의 데이터를 변경할 수 없다.
		- COMMIT 실행 후
			* 데이터 변경 내용이 데이터베이스에 영구적으로 저장된다.
			* 모든 사용자가 변경내용을 조회할 수 있다.
			* 행 잠금이 해제되어 다른 사용자가 행을 조작할 수 있다.
		- ROLLBACK 실행 후
			* 데이터 변경 내용이 전부 취소된다.
			* 데이터가 이전 상태로 복구된다.
			* 행 잠금이 해제된다.
